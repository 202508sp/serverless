# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: shiki
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: care-ar-glass
# "service" is the name of this project. This will also be added to your AWS resource names.
service: care-ar-glass

useDotenv: true

provider:
  name: aws
  runtime: nodejs22.x
  region: ap-northeast-1
  stage: ${opt:stage, 'dev'}
  stackName: care-ar-glass-${self:provider.stage}
  deploymentMethod: direct

  environment:
    NODE_ENV: ${opt:stage, 'dev'}
    PATIENTS_TABLE: ${self:service}-${self:provider.stage}-patients
    VITALS_TABLE: ${self:service}-${self:provider.stage}-vitals
    CARE_RECORDS_TABLE: ${self:service}-${self:provider.stage}-care-records
    DEVICES_TABLE: ${self:service}-${self:provider.stage}-devices
    STAFF_TABLE: ${self:service}-${self:provider.stage}-staff
    FAMILY_ACCESS_TABLE: ${self:service}-${self:provider.stage}-family-access
    GEMINI_API_KEY: ${env:GEMINI_API_KEY}
    GOOGLE_APPLICATION_CREDENTIALS: ${google-credentials.json}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - !GetAtt PatientsTable.Arn
            - !GetAtt VitalsTable.Arn

functions:
  commandHandler:
    handler: functions/commandHandler.handler
    events:
      - http:
          path: command
          method: post
          cors: true

# リソース定義
resources:
  - ${file(resources/api-gateway.yml)}
  - ${file(resources/dynamodb.yml)}

# プラグイン
plugins:
  - serverless-offline  # ローカルテスト用

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    target: "node20"

package:
  individually: true
  exclude:
    - ./**
  include:
    - dist/**
    - google-credentials.json